# Project URL: https://github.com/traefik/traefik
# Docs URL: https://doc.traefik.io/traefik/
services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    restart: unless-stopped
    networks: ['demo']
    command:
      - --api.insecure=true #Flag enables the web UI without authentication
      # *** Docker provider configuration ***
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false # Makes sure that services have to explicitly direct Traefik to expose them
      - --providers.docker.network=demo # Default docker network to use for connections to all containers
      # *** Entrypoints configuration ***
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # *** Configuration for certificate and DNS ***
      #- --certificatesresolvers.myresolver.acme.dnschallenge=true
      #- --certificatesresolvers.myresolver.acme.dnschallenge.provider=namecheap
      #- --certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      #- --certificatesresolvers.myresolver.acme.email=xxxxxxxx
      #- --certificatesresolvers.myresolver.acme.storage=/acme.json
      #- --certificatesresolvers.myresolver.acme.dnschallenge.resolvers=8.8.8.8:53
      #- --certificatesresolvers.myresolver.acme.dnschallenge.delayBeforeCheck=5
      # *** Logging configuration ***
      - --log.level=info # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO

    ## Namecheap env ##
    #environment:
    #- "NAMECHEAP_API_USER=xxxxxxxxxxxxxxxxx"
    #- "NAMECHEAP_API_KEY=xxxxxxxxxxxxxxxxxx"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
        ## configuration for certificate and dns ##
        #- /opt/traefik/acme.json:/acme.json

  backend1:
    image: httpd:alpine
    container_name: "backend1"
    restart: always
    networks: ['demo']
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend1.rule=Host(`backend1.localhost`)"
      - "traefik.http.routers.backend1.entrypoints=web"
      - "traefik.http.services.backend1.loadbalancer.server.port=80"
      - "traefik.http.middlewares.backend1-redirect.redirectscheme.scheme=http"
    volumes:
      - ../config/index1.html:/usr/local/apache2/htdocs/index.html

  backend2:
    image: nginx:alpine
    container_name: "backend2"
    restart: always
    networks: ['demo']
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend2.rule=Host(`backend2.localhost`)"
      - "traefik.http.routers.backend2.entrypoints=web"
      - "traefik.http.services.backend2.loadbalancer.server.port=80"
      - "traefik.http.middlewares.backend2-redirect.redirectscheme.scheme=http"
    volumes:
      - ../config/index2.html:/usr/share/nginx/html/index.html

volumes:
  traefik-docker:

networks:
  demo:
    name: demo
    driver: bridge
