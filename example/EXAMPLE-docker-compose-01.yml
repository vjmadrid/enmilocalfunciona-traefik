# Project URL: https://github.com/traefik/traefik
# Docs URL: https://doc.traefik.io/traefik/
services:
  traefik:
    image: traefik:v3.3.3
    container_name: traefik
    restart: unless-stopped
    networks: ['demo']
    security_opt:
      - no-new-privileges:true # Prevent escalate privileges using setuid or setgid binaries
    environment:
      - TZ=Europe/Madrid
    command:
      # STATIC CONFIGURATION
      # *** Logging configuration ***
      - --log.level=info # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO
      - --log.filePath=/logs/traefik.log
      #- --log.format=json
      # *** API configuration ***
      - --api.insecure=true # Set access to traefic api wihout autentication (NO use Production)
      # *** Docker provider configuration ***
      - --providers.docker=true
    ports:
      - 80:80 # HTTP port
      - 8080:8080 # Web UI port (enabled by --api.insecure=true)
    volumes:
      # *** General configuration ***
      #- /etc/localtime:/etc/localtime:ro # Uses the same timezone as the computer instance
      - /var/run/docker.sock:/var/run/docker.sock:ro # Access to Docker on host machine
      # *** Volume configuration ***
      - ./traefik-docker/logs:/logs # Storage for Traefik Logs

  # https://github.com/traefik/whoami
  backend1:
    image: traefik/whoami:v1.10.4
    container_name: backend1
    restart: always
    networks: ['demo']
    labels: # OPTION 1
      # curl -H Host:backend1.localhost http://127.0.0.1
      - traefik.http.routers.backend1_route.rule=Host(`backend1.localhost`) # Rule based on the Host of the request

volumes:
  traefik-docker:

networks:
  demo:
    name: demo
    driver: bridge
