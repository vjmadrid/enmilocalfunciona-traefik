# Project URL: https://github.com/traefik/traefik
# Docs URL: https://doc.traefik.io/traefik/
services:
  traefik:
    image: traefik:v3.3.3
    container_name: traefik
    restart: unless-stopped
    networks: ['demo']
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=Europe/Madrid
    command:
      # *** Logging configuration ***
      - --log.level=info # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO
      #- --log.format=json
      # *** API configuration ***
      - --api.insecure=true # Set access to traefic api wihout autentication
      # *** Docker provider configuration ***
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # *** Entrypoints configuration ***
      - --entryPoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Access to Docker on host machine
      #- ./traefik-docker/logs:/logs # Storage for Traefik Logs
      #- ./traefik-docker/letsencrypt:/letsencrypt # Storage for Letsencrypt certificates
      #- ./traefik-docker/certs:/certs # Storage for certificates
      #- ./traefik-docker/traefik:/etc/traefik # Traefik configuration

  backend1:
    image: httpd:alpine
    container_name: backend1
    restart: always
    networks: ['demo']
    labels:
      # *** General Traefik configuration ***
      - traefik.enable=true # Explicitly instruct Traefik to expose this service
      # *** Router configuration ***
      # curl -H Host:backend1.localhost http://127.0.0.1
      - traefik.http.routers.backend1.rule=Host(`backend1.localhost`) #Rule based on the Host of the request
      - traefik.http.routers.backend1.entrypoints=web
      # *** Service configuration ***
      - traefik.http.services.backend1.loadbalancer.server.port=80

volumes:
  traefik-docker:

networks:
  demo:
    name: demo
    driver: bridge
